@use '../../styles/variables.module.scss' as v;

.ParallaxContainer {
  flex: 1;
}

.Parallax {
  background-size: cover !important;
  background-position: center;
}

.ParallaxDesktop {
  width: calc(100vw - 170px) !important;
}

.ParallaxMob {
  height: 100vh !important;
}

.ParallaxBg {
  background: v.$parallax_bg_image;
}

.flexBox {
  @include v.flexCenter;
  height: 100vh;
  text-align: left;
  h1 {
    color: white;
    font-size: 10vw;
  }
}

.flexBoxTop {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  text-align: left;
  height: 1vh !important;
  background-color: transparent;
  h2 {
    font-size: 3rem;
    width: 100%;
    padding: 0.5rem;
    margin-top: 0;
    color: #d1edff;
    background-color: #121212;
    @media screen and (max-width: v.$large) {
      font-size: 2rem;
      line-height: 4rem;
    }
  }
}

.About {
  width: 80vw;
  z-index: 0 !important;
  margin: 10px;
  fieldset {
    padding: 10px;
    border: 3px double;
    border-radius: 25px;
    color: #4a524a;
    legend {
      font-size: 3vw;
      color: v.$about_text_color;
    }
    p {
      font-size: 1.5em;
      color: v.$about_text_color;
      font-weight: 600;
      text-align: center;
      mix-blend-mode: difference;
      box-shadow: 0 0 2px 4px #4a524a;
      border-radius: 20px;
      padding: 20px;
    }
  }
}

.AboutMob {
  width: 100vw;
  height: 100vh;
  padding: 10px;
  fieldset {
    padding: 0;
    border: 3px double;
    border-radius: 25px;
    legend {
      font-size: 5vmin;
    }
    p {
      font-size: 5vmin;
      color: rgba(255, 255, 255, 0.671);
      font-weight: 300;
      mix-blend-mode: difference;
      box-shadow: none;
      border-radius: 20px;
      padding: 20px;
      text-align: left;
    }
  }
}

.GradientText {
  background: #121fcf;
  background: linear-gradient(to right, #a6acff 0%, #f5de76 100%);
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.h1 {
  font-size: 15vmin !important;
}

.StarAnimation {
  animation: 4s slideUpStars forwards;
}

.StarAnimation2 {
  animation: 4s slideOutStars forwards;
}

@keyframes slideUpStars {
  0% {
    transform: translateY(100vh);
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes slideOutStars {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-100vh);
  }
}

@keyframes slideUpMaountain {
  0% {
    transform: translateY(100vh);
    opacity: 0;
  }
  1% {
    opacity: 1;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@mixin Mountain($filter, $animation, $margin_left, $y, $z_index) {
  margin-left: $margin_left;
  filter: $filter;
  z-index: $z_index !important;
  transform: $y;
  animation: $animation;
}
/* .MountainBottom {
    filter: sepia(70%);
    position: absolute;
    width: 100%;
    height: 100%;
    margin-top: -30px;
} */

.Forrest {
  filter: sepia(70%);
  position: absolute;
  width: 100%;
  height: 100%;
}

.MountainMob {
  animation: 4s slideUpMaountain forwards 2s;
  margin-top: 0;
  transform: translateY(100vh);
  opacity: 0;
}

.Sky {
  background: linear-gradient(rgba(0, 0, 0, 0) 55%, rgb(26, 105, 207));
  z-index: 0 !important;
}

.MountainFront {
  @include Mountain(
    sepia(40%) saturate(130%),
    2s slideUpFront forwards 2s,
    0,
    translateY(80vmin),
    4
  );
  width: 100%;
  height: 75%;
}

.MountainMid {
  @include Mountain(brightness(0.9), 2s slideUpMid forwards 2s, 28vw, translateY(80vmin), 3);
  width: 100%;
  height: 75%;
  margin-top: 18vh;
  @media screen and (max-width: v.$extra_large) {
    margin-top: 22vh;
  }
  @media screen and (max-width: v.$large) {
    margin-top: 28vh;
  }
}

.MountainBack {
  @include Mountain(brightness(0.8), 2s slideUpBack forwards 2.1s, 0, translateY(100vmin), -1);
  width: 100%;
  height: 75%;
}

.flexBoxBottom {
  @include v.flexCenter;
  height: 100vh;
  text-align: center;
}

.flexBoxButton {
  @include v.flexCenter;
  position: absolute;
  height: 1vh !important;
  bottom: 0 !important;
}

.MountainBgImage {
  background-image: black;
  background-size: cover !important;
  background-position: center;
}

.IceLayer {
  background: linear-gradient(180deg, v.$cave_background_color, v.$base_background_color);
  z-index: 5;
}

.LightIceLayer {
  background-color: v.$cave_background_color;
  z-index: 5;
}

.Trees {
  display: block;
  background-image: url('../../assets/img/trees.png');
  background-repeat: no-repeat;
  background-size: cover !important;
}

.Bottom {
  display: block;
  background-image: url('../../assets/img/lakeBottom.png');
  background-repeat: no-repeat;
  background-size: cover !important;
  opacity: 0.1;
}

.Fog {
  display: block;
  background-image: url('../../assets/img/fog1.png');
  background-repeat: no-repeat;
  background-size: cover !important;
}

@keyframes waves {
  0% {
    transform: translateX(-24.5%);
  }
  100% {
    transform: translateX(24.5%);
  }
}

.Water {
  z-index: 5;
}

@keyframes slideUpMid {
  0% {
    transform: translateY(61vh);
  }
  100% {
    transform: translateY(20vh);
  }
}

@keyframes slideUpBack {
  0% {
    transform: translateY(61vh);
  }
  100% {
    transform: translateY(22vh);
  }
}

@keyframes slideUpFront {
  0% {
    transform: translateY(61vh);
  }
  100% {
    transform: translateY(25vh);
  }
}

.Moon {
  display: flex;
  justify-content: flex-end;
  align-items: flex-start;
  margin-left: -60px;
  margin-top: 10vh;
  animation: 4s slideMoon forwards;
}

@keyframes slideMoon {
  from {
    transform: translateY(110vh);
  }
  to {
    transform: translateY(0);
  }
}

.TransparentBg {
  background-color: rgba(0, 0, 0, 0.158);
}

.MySkills {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  gap: 5vmin;
  align-items: center;
  padding: 0 5vw;
  color: white;
  transform: translateX(-99.9%);
  &:__mob{
    background-color: red;
  }
  @media screen and (max-width: v.$small) {
    margin-top: -20vmin;
    gap: 4vmin;
  }
  & > div {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    div {
      font-size: 2vw;
      @media (pointer: none),(pointer: coarse) {
        font-size: 3vmax;
      }
    }
  }
}

.MySkillsAnimate {
  animation: 1s MySkillsAnimated ease-in-out forwards 0.5s;
}

@keyframes MySkillsAnimated {
  from {
    transform: translateX(-99.9%);
  }
  to {
    transform: translateX(0);
  }
}

.Title {
  display: block;
  position: relative;
  width: 100%;
  padding: 10px;
  z-index: 999999 !important;
  background-color: rgb(250, 99, 99);
}

.SkillIcon {
  font-size: 3vw;
  transition: transform 0.2s ease-in, box-shadow 0.15s ease-in-out;
  color: #d1edff;
  cursor: pointer;
  @media screen and (max-width: v.$small) {
    font-size: 3vmax;
  }
  &:hover {
    transform: scale(1.4) rotate(10deg);
  }
  &:active {
    box-shadow: 0 -10px 15px 7px rgb(0, 255, 234);
  }
  & + div {
    color: #d1edff;
  }
}

.CamuText {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: flex-end;
  bottom: 10px;
  width: 70%;
  padding: 0 40px;
  @media screen and (max-width: v.$small) {
    bottom: 25%;
    padding: 20px 0;
  }
  div {
    color: v.$base_background_color;
    line-height: 1;
  }
  span {
    font-size: 10vmin;
    display: inline-block;
    animation: move 3s ease-in-out infinite;
    &:nth-child(2) {
      animation-delay: 0.5s;
    }
    &:nth-child(3) {
      animation-delay: 0.6s;
    }
    &:nth-child(4) {
      animation-delay: 0.7s;
    }
    &:nth-child(5) {
      animation-delay: 0.8s;
    }
    &:nth-child(6) {
      animation-delay: 0.9s;
    }
    &:nth-child(7) {
      animation-delay: 1s;
    }
    &:nth-child(8) {
      animation-delay: 1.1s;
    }
    &:nth-child(9) {
      animation-delay: 1.2s;
    }
    @media screen and (max-width: v.$small) {
      font-size: 20vmin;
    }
  }
}

@keyframes move {
  0% {
    transform: translate(3%, 0);
  }
  50% {
    text-shadow: 0 0 0.6vw rgba(rgb(255, 255, 255), 0.3);
  }
  100% {
    transform: translate(-3%, 0);
  }
}

.Water {
  background-color: #6dd1ff;
}

.FishLayer {
  z-index: 0 !important;
  filter: hue-rotate(100deg);
}

.AnimateFish {
  transform: scaleX(1.2) scaleY(1.2);
  animation: 60s fishAnimate linear alternate infinite;
}

.AnimateFishMob {
  position: absolute;
  top: 25%;
  width: 100%;
  text-align: center;
}

@keyframes fishAnimate {
  0% {
    transform: translateY(40vh) scale(1.5);
  }
  25% {
    transform: translateY(40vh) scale(1.5);
  }
  50% {
    transform: translateY(40vh) scale(1.5);
  }
  75% {
    transform: translateY(40vh) scale(1.5);
  }
  100% {
    transform: translateY(40vh) scale(1.5);
  }
}
